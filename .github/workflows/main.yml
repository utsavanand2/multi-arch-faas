name: CI-CD

on:
  push:
    branches: 
      - master

jobs:
  shrinkwrap-build:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Setting up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      -
        name: Pull template
        run: |
          docker run --rm -v `pwd`:`pwd` -w `pwd` \
          openfaas/faas-cli:latest-root \
          template pull https://github.com/alexellis/multiarch-templates
      - 
        name: Running faas-cli skrinkwrap build
        run: |
          docker run --rm -v `pwd`:`pwd` -w `pwd` \
          openfaas/faas-cli:latest-root \
          build -f hello.yml --shrinkwrap
      -
        name: Login to DockerHub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - 
        name: Login to OpenFaaS Gateway
        run: |
          docker run --rm -v $HOME:/root -w $HOME \
          openfaas/faas-cli:latest-root \
          login \
          -p ${{ secrets.OPENFAAS_GATEWAY_PASSWD }} \
          -g ${{ secrets.OPENFAAS_GATEWAY }} \
          && \
          sudo chown $USER:$USER -R $HOME/.openfaas && \
          ls -lah $HOME
      - 
        name: Build and Push OpenFaaS function with buildx
        run: |
          # Update rights of build dir from root to current user \
          # Build and push multi-arch image \
          sudo chown $USER:$USER -R build/ && \
          docker buildx build \
          --platform linux/amd64,linux/arm/v7,linux/arm64 \
          --output "type=image,push=true" \
          --tag utsavanand2/hello:latest \
          build/hello/
      - 
        name: Deploying OpenFaaS function to your Pi k3s cluster
        run: |
          docker run --rm -w `pwd` \
          -v `pwd`:`pwd` \
          -v $HOME:/root \
          openfaas/faas-cli:latest-root \
          deploy -f hello.yml